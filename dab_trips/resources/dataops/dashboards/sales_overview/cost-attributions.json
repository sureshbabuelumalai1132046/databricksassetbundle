{"datasets":[{"name":"23e5cf8a","displayName":"Top 10 Expensive Jobs","query":"WITH list_cost_per_job AS (\r\n  SELECT\r\n    t1.workspace_id,\r\n    t1.usage_metadata.job_id,\r\n    COUNT(DISTINCT t1.usage_metadata.job_run_id) AS runs,\r\n    SUM(t1.usage_quantity * list_prices.pricing.default) AS list_cost,\r\n    FIRST(identity_metadata.run_as, TRUE) AS run_as,\r\n    FIRST(t1.custom_tags, TRUE) AS custom_tags,\r\n    MAX(t1.usage_end_time) AS last_seen_date\r\n  FROM system.billing.usage t1\r\n  INNER JOIN system.billing.list_prices list_prices ON\r\n    t1.cloud = list_prices.cloud AND\r\n    t1.sku_name = list_prices.sku_name AND\r\n    t1.usage_start_time >= list_prices.price_start_time AND\r\n    (t1.usage_end_time <= list_prices.price_end_time OR list_prices.price_end_time IS NULL)\r\n  WHERE\r\n    t1.billing_origin_product = 'JOBS' AND\r\n    t1.usage_date >= CURRENT_DATE() - INTERVAL 60 DAY\r\n  GROUP BY ALL\r\n),\r\nmost_recent_jobs AS (\r\n  SELECT\r\n    *,\r\n    ROW_NUMBER() OVER(PARTITION BY workspace_id, job_id ORDER BY change_time DESC) AS rn\r\n  FROM system.lakeflow.jobs\r\n  QUALIFY rn = 1\r\n)\r\nSELECT\r\n  t2.name,\r\n  t1.job_id,\r\n  t1.workspace_id,\r\n  t1.runs,\r\n  t1.run_as,\r\n  SUM(list_cost) AS list_cost,\r\n  t1.last_seen_date\r\nFROM list_cost_per_job t1\r\nLEFT JOIN most_recent_jobs t2 USING (workspace_id, job_id)\r\nGROUP BY ALL\r\nORDER BY list_cost DESC\r\nLIMIT 10"},{"name":"e71bdbe7","displayName":"Top 10 Expensive Workspace","query":"WITH list_cost_per_workspace AS (\r\n  SELECT\r\n    t1.workspace_id,\r\n    SUM(t1.usage_quantity * list_prices.pricing.default) AS list_cost,\r\n    MAX(t1.usage_end_time) AS last_seen_date\r\n  FROM system.billing.usage t1\r\n  INNER JOIN system.billing.list_prices list_prices ON\r\n    t1.cloud = list_prices.cloud AND\r\n    t1.sku_name = list_prices.sku_name AND\r\n    t1.usage_start_time >= list_prices.price_start_time AND\r\n    (t1.usage_end_time <= list_prices.price_end_time OR list_prices.price_end_time IS NULL)\r\n  WHERE\r\n    t1.usage_date >= CURRENT_DATE() - INTERVAL 60 DAY\r\n  GROUP BY t1.workspace_id\r\n)\r\nSELECT\r\n  t2.name AS workspace_name,\r\n  t1.workspace_id,\r\n  SUM(t1.list_cost) AS list_cost,\r\n  t1.last_seen_date\r\nFROM list_cost_per_workspace t1\r\nLEFT JOIN external.powerbi_bronze.workspace_information t2 ON t1.workspace_id = t2.id\r\nGROUP BY t2.name, t1.workspace_id, t1.last_seen_date\r\nORDER BY list_cost DESC\r\nLIMIT 10"},{"name":"d1fd1543","displayName":"Expensive Serverless Users","query":"with list_logs as (\r\n    SELECT\r\n        t1.workspace_id,\r\n        identity_metadata.run_as,\r\n        CASE WHEN t1.sku_name LIKE '%JOBS%' THEN SUM(t1.usage_quantity * list_prices.pricing.default) ELSE 0 END as list_jobs,\r\n        CASE WHEN t1.usage_metadata.notebook_id IS NOT NULL THEN SUM(t1.usage_quantity * list_prices.pricing.default) ELSE 0 END as list_notebooks\r\n    FROM system.billing.usage t1 \r\n    INNER JOIN system.billing.list_prices list_prices on\r\n        t1.cloud = list_prices.cloud and\r\n        t1.sku_name = list_prices.sku_name and\r\n        t1.usage_start_time >= list_prices.price_start_time and\r\n        (t1.usage_end_time <= list_prices.price_end_time or list_prices.price_end_time is null)\r\n    WHERE\r\n        t1.sku_name LIKE '%SERVERLESS%'\r\n        AND identity_metadata.run_as IS NOT NULL\r\n        AND t1.usage_start_time >= CURRENT_DATE() - INTERVAL 30 DAY \r\n        AND (t1.sku_name LIKE '%JOBS%' or t1.usage_metadata.notebook_id IS NOT NULL)\r\n    GROUP BY t1.workspace_id, t1.identity_metadata.run_as, t1.sku_name, t1.usage_metadata.notebook_id\r\n)\r\nSELECT \r\n    workspace_id,\r\n    run_as,\r\n    SUM(list_jobs) as list_jobs,\r\n    SUM(list_notebooks) as list_notebooks,\r\n    SUM(list_jobs + list_notebooks) as list_cost\r\nfrom list_logs\r\nGROUP BY ALL\r\nORDER BY list_cost DESC \r\n"},{"name":"51e6ec1e","displayName":"Outlier-Jobs","query":"-- SPENDING BROKEN DOWN BY JOB\r\nwith stats_per_job_run as (\r\n  SELECT\r\n    t1.workspace_id,\r\n    t1.usage_metadata.job_id,\r\n    t1.usage_metadata.job_run_id as run_id,\r\n    SUM(t1.usage_quantity * list_prices.pricing.default) as list_cost,\r\n    first(identity_metadata.run_as, true) as run_as,\r\n    first(t1.custom_tags, true) as custom_tags,\r\n    MAX(t1.usage_end_time) as last_seen,\r\n    MIN(t1.usage_start_time) as first_seen\r\n  FROM system.billing.usage t1 \r\n  INNER JOIN system.billing.list_prices list_prices on\r\n      t1.cloud = list_prices.cloud and\r\n      t1.sku_name = list_prices.sku_name and\r\n      t1.usage_start_time >= list_prices.price_start_time and\r\n      (t1.usage_end_time <= list_prices.price_end_time or list_prices.price_end_time is null)\r\n  WHERE\r\n      t1.sku_name LIKE '%SERVERLESS%'\r\n      AND t1.usage_metadata.job_id IS NOT NULL\r\n      AND t1.usage_metadata.job_run_id IS NOT NULL\r\n      AND t1.usage_start_time >= CURRENT_DATE() - INTERVAL 30 DAY \r\n  GROUP BY 1,2,3\r\n), \r\nstats_per_job AS (\r\n  SELECT\r\n    workspace_id,\r\n    job_id,\r\n    COUNT(run_id) AS runs,\r\n    SUM(list_cost) AS total_list_cost,\r\n    AVG(list_cost) AS avg_list_cost,\r\n    MAX(list_cost) AS max_list_cost,\r\n    percentile(list_cost, 0.9) AS p90\r\n  FROM\r\n    stats_per_job_run\r\n  WHERE\r\n    first_seen > CURRENT_TIMESTAMP() - INTERVAL 30 DAYS\r\n  GROUP BY ALL\r\n  ORDER BY\r\n    total_list_cost DESC\r\n)\r\nSELECT\r\n  *,\r\n  (max_list_cost - p90) AS dbus_deviation_from_p90\r\nFROM\r\n  stats_per_job\r\nORDER BY\r\n  dbus_deviation_from_p90 DESC"},{"name":"e319de1c","displayName":"Growing Jobs","query":"with serverless_logs as (\r\n  SELECT\r\n    t1.*,\r\n    t1.usage_quantity * list_prices.pricing.default as list_cost\r\n  FROM system.billing.usage t1 \r\n  INNER JOIN system.billing.list_prices list_prices on\r\n    t1.cloud = list_prices.cloud and\r\n    t1.sku_name = list_prices.sku_name and\r\n    t1.usage_start_time >= list_prices.price_start_time and\r\n    (t1.usage_end_time <= list_prices.price_end_time or list_prices.price_end_time is null)\r\n  WHERE\r\n    t1.sku_name LIKE '%SERVERLESS%'\r\n    AND (t1.sku_name LIKE '%JOBS%' or t1.usage_metadata.notebook_id IS NOT NULL)\r\n),\r\njobs_dollars as (\r\n  select\r\n    date_sub(to_date(usage_date), dayofweek(to_date(usage_date))) as week_start,\r\n    SUM(list_cost) as list_cost,\r\n    COUNT(distinct to_date(usage_start_time)) as days\r\n  from\r\n    serverless_logs t1 \r\n  group by all\r\n  having days = 7\r\n  order by 1 asc, 2 asc\r\n),\r\ndbu_growth as (\r\n    select\r\n        week_start,\r\n        list_cost,\r\n        100 * (list_cost - lag(list_cost, 1) over (order by week_start)) / lag(list_cost, 1) over (order by week_start) as weekly_growth\r\n    from jobs_dollars\r\n    order by week_start asc\r\n)\r\nselect\r\n    week_start,\r\n    weekly_growth,\r\n    list_cost,\r\n    avg(weekly_growth) over (order by week_start ROWS BETWEEN 12 preceding AND CURRENT ROW) as 3_months_growth_moving_avg\r\nfrom dbu_growth"},{"name":"26051c19","displayName":"Most Expensive Notebook","query":"SELECT\r\n    t1.workspace_id,\r\n    t1.usage_metadata.notebook_id,\r\n    first(t1.identity_metadata.run_as, true) as run_as,\r\n    SUM(t1.usage_quantity * list_prices.pricing.default) as list_cost,\r\n    first(t1.custom_tags, true) as custom_tags\r\nFROM system.billing.usage t1 \r\nINNER JOIN system.billing.list_prices list_prices on\r\n    t1.cloud = list_prices.cloud and\r\n    t1.sku_name = list_prices.sku_name and\r\n    t1.usage_start_time >= list_prices.price_start_time and\r\n    (t1.usage_end_time <= list_prices.price_end_time or list_prices.price_end_time is null)\r\nWHERE\r\n    t1.sku_name LIKE '%SERVERLESS%'\r\n    AND t1.usage_metadata.notebook_id IS NOT NULL\r\n    AND t1.usage_start_time >= CURRENT_DATE() - INTERVAL 30 DAY \r\nGROUP BY ALL\r\nORDER BY list_cost DESC\r\n"},{"name":"28a78f66","displayName":"Top Spend by Endpoints","query":"WITH pricing AS (\r\n  select\r\n    pricing.effective_list.default as price,\r\n    price_start_time,\r\n    sku_name,\r\n    COALESCE(price_end_time, NOW()) as price_end_time\r\n  from\r\n    system.billing.list_prices p\r\n),\r\nendpoint_data AS (\r\n  SELECT\r\n    usage_quantity * price as cost,\r\n    --endpoint_name field was added in June 2024, previously it was null\r\n    IF(\r\n      usage_metadata.endpoint_name IS NULL,\r\n      'not populated',\r\n      usage_metadata.endpoint_name\r\n    ) AS endpoint_name,\r\n    u.usage_quantity,\r\n    u.usage_start_time,\r\n    u.usage_date,\r\n    u.usage_type,\r\n    CASE\r\n      WHEN u.usage_type = 'TOKEN' THEN 'PAY_PER_TOKEN'\r\n      WHEN product_features ['serving_type'] = 'MODEL' THEN 'CPU_MODEL'\r\n      ELSE product_features ['serving_type']\r\n    END AS serving_type,\r\n    u.custom_tags,\r\n    TRANSFORM(\r\n      MAP_KEYS(custom_tags),\r\n      (k, i) -> CONCAT(k, '=', MAP_VALUES(custom_tags) [i])\r\n    ) AS key_value_tags,\r\n    u.workspace_id,\r\n    u.usage_metadata,\r\n    u.billing_origin_product\r\n  FROM\r\n    system.billing.usage u\r\n    INNER JOIN pricing p ON p.sku_name = u.sku_name\r\n    AND u.usage_start_time BETWEEN p.price_start_time AND p.price_end_time\r\n    AND if(:workspace_id='<ALL WORKSPACES>', true, workspace_id = :workspace_id)\r\n  WHERE\r\n    u.billing_origin_product = 'MODEL_SERVING'\r\n    AND usage_date BETWEEN :start_date AND :end_date\r\n)\r\nSELECT\r\n  *\r\nFROM\r\n  endpoint_data\r\nWHERE\r\n  (\r\n    :tags = \"include all tags\"\r\n    OR ARRAY_CONTAINS(key_value_tags, :tags)\r\n    OR MAP_CONTAINS_KEY(custom_tags, :tags)\r\n  )","parameters":[{"displayName":"workspace_id","keyword":"workspace_id","dataType":"STRING","defaultSelection":{}},{"displayName":"start_date","keyword":"start_date","dataType":"STRING","defaultSelection":{}},{"displayName":"end_date","keyword":"end_date","dataType":"STRING","defaultSelection":{}},{"displayName":"tags","keyword":"tags","dataType":"STRING","defaultSelection":{}}]},{"name":"65a03f6b","displayName":"Databricks Cost Breakdown by Meter Type","query":"SELECT\r\n    billing_origin_product,\r\n    usage_date,\r\n    sum(usage_quantity) as usage_quantity\r\nFROM system.billing.usage\r\nWHERE\r\n    month(usage_date) = month(NOW())\r\n    AND year(usage_date) = year(NOW())\r\nGROUP BY billing_origin_product, usage_date"},{"name":"0788148b","displayName":"Cost Breakdown by Tags","query":"WITH list_cost_per_product AS (\r\n  SELECT\r\n    t1.workspace_id,\r\n    t1.custom_tags['product'] AS product,\r\n    SUM(t1.usage_quantity * list_prices.pricing.default) AS list_cost,\r\n    MAX(t1.usage_end_time) AS last_seen_date\r\n  FROM system.billing.usage t1\r\n  INNER JOIN system.billing.list_prices list_prices ON\r\n    t1.cloud = list_prices.cloud AND\r\n    t1.sku_name = list_prices.sku_name AND\r\n    t1.usage_start_time >= list_prices.price_start_time AND\r\n    (t1.usage_end_time <= list_prices.price_end_time OR list_prices.price_end_time IS NULL)\r\n  WHERE\r\n    t1.custom_tags['product'] IS NOT NULL AND\r\n    t1.usage_date >= CURRENT_DATE() - INTERVAL 30 DAY\r\n  GROUP BY t1.workspace_id, t1.custom_tags['product']\r\n)\r\nSELECT\r\n  product,\r\n  workspace_id,\r\n  SUM(list_cost) AS total_cost,\r\n  MAX(last_seen_date) AS last_seen_date\r\nFROM list_cost_per_product\r\nGROUP BY product, workspace_id\r\nORDER BY total_cost DESC\r\nLIMIT 10"},{"name":"8b859a3a","displayName":"Expensive Interactive clusters","query":"WITH list_cost_per_cluster AS (\r\n  SELECT\r\n    t1.workspace_id,\r\n    t1.usage_metadata.cluster_id AS cluster_id,\r\n    SUM(t1.usage_quantity * list_prices.pricing.default) AS list_cost,\r\n    MAX(t1.usage_end_time) AS last_seen_date\r\n  FROM system.billing.usage t1\r\n  INNER JOIN system.billing.list_prices list_prices ON\r\n    t1.cloud = list_prices.cloud AND\r\n    t1.sku_name = list_prices.sku_name AND\r\n    t1.usage_start_time >= list_prices.price_start_time AND\r\n    (t1.usage_end_time <= list_prices.price_end_time OR list_prices.price_end_time IS NULL)\r\n  WHERE\r\n    t1.sku_name = 'STANDARD_ALL_PURPOSE_COMPUTE' AND\r\n    t1.usage_metadata.cluster_id IS NOT NULL AND\r\n    t1.usage_date >= CURRENT_DATE() - INTERVAL 60 DAY\r\n  GROUP BY t1.workspace_id, t1.usage_metadata.cluster_id\r\n),\r\nmost_recent_clusters AS (\r\n  SELECT\r\n    cluster_id,\r\n    cluster_name,\r\n    workspace_id,\r\n    ROW_NUMBER() OVER(PARTITION BY workspace_id, cluster_id ORDER BY change_time DESC) AS rn\r\n  FROM system.compute.clusters\r\n)\r\nSELECT\r\n  t2.cluster_name,\r\n  t1.workspace_id,\r\n  t1.cluster_id,\r\n  t1.list_cost,\r\n  t1.last_seen_date\r\nFROM list_cost_per_cluster t1\r\nLEFT JOIN most_recent_clusters t2 ON t1.workspace_id = t2.workspace_id AND t1.cluster_id = t2.cluster_id\r\nWHERE t2.rn = 1\r\nORDER BY t1.list_cost DESC\r\nLIMIT 10"},{"name":"aab6e6d2","displayName":"Untitled dataset","query":"SELECT\r\n SUM(usage.usage_quantity * list_prices.pricing.effective_list.default)\r\n as `Total Dollar Cost`\r\nFROM system.billing.usage\r\nJOIN system.billing.list_prices ON list_prices.sku_name = usage.sku_name\r\nWHERE usage.custom_tags [:key] = :value\r\nAND usage.usage_end_time >= list_prices.price_start_time\r\nAND (list_prices.price_end_time IS NULL OR usage.usage_end_time < list_prices.price_end_time)\r\nAND usage.usage_date BETWEEN \"2024-05-01\" AND \"2024-05-31\"","parameters":[{"displayName":"key","keyword":"key","dataType":"STRING","defaultSelection":{}},{"displayName":"value","keyword":"value","dataType":"STRING","defaultSelection":{}}]}],"pages":[{"name":"f02a57c3","displayName":"Untitled page","layout":[{"widget":{"name":"1f5be726","queries":[{"name":"main_query","query":{"datasetName":"23e5cf8a","fields":[{"name":"sum(list_cost)","expression":"SUM(`list_cost`)"},{"name":"name","expression":"`name`"}],"disaggregated":false}}],"spec":{"version":3,"widgetType":"pie","encodings":{"angle":{"fieldName":"sum(list_cost)","scale":{"type":"quantitative"},"displayName":"Percentage Contribution"},"color":{"fieldName":"name","scale":{"type":"categorical"},"displayName":"name"},"label":{"show":true}},"frame":{"title":"Top 10 Expensive Jobs","showTitle":true}}},"position":{"x":0,"y":2,"width":3,"height":6}},{"widget":{"name":"933e9f70","queries":[{"name":"main_query","query":{"datasetName":"e71bdbe7","fields":[{"name":"sum(list_cost)","expression":"SUM(`list_cost`)"},{"name":"workspace_name","expression":"`workspace_name`"}],"disaggregated":false}}],"spec":{"version":3,"widgetType":"pie","encodings":{"angle":{"fieldName":"sum(list_cost)","scale":{"type":"quantitative"},"displayName":"Sum of list_cost"},"color":{"fieldName":"workspace_name","scale":{"type":"categorical"},"displayName":"workspace_name"},"label":{"show":true}},"frame":{"title":"Top Expensive Workspaces","showTitle":true}}},"position":{"x":3,"y":8,"width":3,"height":6}},{"widget":{"name":"116dc232","spec":{"version":2,"widgetType":"filter-single-select","encodings":{},"frame":{"showTitle":true}}},"position":{"x":3,"y":14,"width":2,"height":1}},{"widget":{"name":"8a26068c","queries":[{"name":"main_query","query":{"datasetName":"d1fd1543","fields":[{"name":"sum(list_cost)","expression":"SUM(`list_cost`)"},{"name":"run_as","expression":"`run_as`"}],"disaggregated":false}}],"spec":{"version":3,"widgetType":"pie","encodings":{"angle":{"fieldName":"sum(list_cost)","scale":{"type":"quantitative"},"displayName":"Serverless Usage"},"color":{"fieldName":"run_as","scale":{"type":"categorical"},"displayName":"run_as"},"label":{"show":true}},"frame":{"title":"Top Expensive Users","showTitle":true}}},"position":{"x":3,"y":2,"width":3,"height":6}},{"widget":{"name":"9e2697ea","textbox_spec":""},"position":{"x":0,"y":0,"width":6,"height":2}}],"pageType":"PAGE_TYPE_CANVAS"},{"name":"c7544462","displayName":"Untitled page 1","pageType":"PAGE_TYPE_CANVAS"}]}